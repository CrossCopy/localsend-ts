// This file is auto-generated by @hey-api/openapi-ts

export type GetApiLocalsendV2InfoData = {
	body?: never
	path?: never
	query?: never
	url: "/api/localsend/v2/info"
}

export type GetApiLocalsendV2InfoResponses = {
	/**
	 * Device information
	 */
	200: {
		alias: string
		version: string
		deviceModel: string
		deviceType: "mobile" | "desktop" | "web" | "headless" | "server"
		fingerprint: string
		port: number
		protocol: "http" | "https"
		download: boolean
	}
}

export type GetApiLocalsendV2InfoResponse =
	GetApiLocalsendV2InfoResponses[keyof GetApiLocalsendV2InfoResponses]

export type PostApiLocalsendV2RegisterData = {
	body?: {
		alias: string
		version: string
		deviceModel: string
		deviceType: "mobile" | "desktop" | "web" | "headless" | "server"
		fingerprint: string
		port: number
		protocol: "http" | "https"
		download: boolean
	}
	path?: never
	query?: never
	url: "/api/localsend/v2/register"
}

export type PostApiLocalsendV2RegisterErrors = {
	/**
	 * Bad request
	 */
	400: {
		message: string
	}
}

export type PostApiLocalsendV2RegisterError =
	PostApiLocalsendV2RegisterErrors[keyof PostApiLocalsendV2RegisterErrors]

export type PostApiLocalsendV2RegisterResponses = {
	/**
	 * Server device information
	 */
	200: {
		alias: string
		version: string
		deviceModel: string
		deviceType: "mobile" | "desktop" | "web" | "headless" | "server"
		fingerprint: string
		port: number
		protocol: "http" | "https"
		download: boolean
	}
}

export type PostApiLocalsendV2RegisterResponse =
	PostApiLocalsendV2RegisterResponses[keyof PostApiLocalsendV2RegisterResponses]

export type PostApiLocalsendV2PrepareUploadData = {
	body?: {
		info: {
			alias: string
			version: string
			deviceModel: string
			deviceType: "mobile" | "desktop" | "web" | "headless" | "server"
			fingerprint: string
			port: number
			protocol: "http" | "https"
			download: boolean
		}
		files: {
			[key: string]: {
				id: string
				fileName: string
				size: number
				fileType: string
				sha256?: string
				preview?: string
				metadata?: {
					modified?: string
					accessed?: string
				}
			}
		}
	}
	path?: never
	query?: {
		pin?: string
	}
	url: "/api/localsend/v2/prepare-upload"
}

export type PostApiLocalsendV2PrepareUploadErrors = {
	/**
	 * Bad request
	 */
	400: {
		message: string
	}
	/**
	 * Unauthorized (PIN required)
	 */
	401: {
		message: string
	}
}

export type PostApiLocalsendV2PrepareUploadError =
	PostApiLocalsendV2PrepareUploadErrors[keyof PostApiLocalsendV2PrepareUploadErrors]

export type PostApiLocalsendV2PrepareUploadResponses = {
	/**
	 * Upload preparation response
	 */
	200: {
		sessionId: string
		files: {
			[key: string]: string
		}
	}
}

export type PostApiLocalsendV2PrepareUploadResponse =
	PostApiLocalsendV2PrepareUploadResponses[keyof PostApiLocalsendV2PrepareUploadResponses]

export type PostApiLocalsendV2UploadData = {
	body?: never
	path?: never
	query: {
		sessionId: string
		fileId: string
		token: string
	}
	url: "/api/localsend/v2/upload"
}

export type PostApiLocalsendV2UploadErrors = {
	/**
	 * Bad request
	 */
	400: {
		message: string
	}
	/**
	 * Forbidden
	 */
	403: {
		message: string
	}
	/**
	 * Session or file not found
	 */
	404: {
		message: string
	}
	/**
	 * Internal server error
	 */
	500: {
		message: string
	}
}

export type PostApiLocalsendV2UploadError =
	PostApiLocalsendV2UploadErrors[keyof PostApiLocalsendV2UploadErrors]

export type PostApiLocalsendV2UploadResponses = {
	/**
	 * File upload successful
	 */
	200: {
		message: string
	}
}

export type PostApiLocalsendV2UploadResponse =
	PostApiLocalsendV2UploadResponses[keyof PostApiLocalsendV2UploadResponses]

export type PostApiLocalsendV2CancelData = {
	body?: never
	path?: never
	query: {
		sessionId: string
	}
	url: "/api/localsend/v2/cancel"
}

export type PostApiLocalsendV2CancelErrors = {
	/**
	 * Missing sessionId
	 */
	400: {
		message: string
	}
}

export type PostApiLocalsendV2CancelError =
	PostApiLocalsendV2CancelErrors[keyof PostApiLocalsendV2CancelErrors]

export type PostApiLocalsendV2CancelResponses = {
	/**
	 * Session cancelled successfully
	 */
	200: {
		message: string
	}
}

export type PostApiLocalsendV2CancelResponse =
	PostApiLocalsendV2CancelResponses[keyof PostApiLocalsendV2CancelResponses]

export type ClientOptions = {
	baseUrl: "http://localhost:53317" | (string & {})
}
