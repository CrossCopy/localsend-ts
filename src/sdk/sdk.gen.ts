// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from "@hey-api/client-fetch"
import type {
	GetApiLocalsendV2InfoData,
	GetApiLocalsendV2InfoResponse,
	PostApiLocalsendV2RegisterData,
	PostApiLocalsendV2RegisterResponse,
	PostApiLocalsendV2RegisterError,
	PostApiLocalsendV2PrepareUploadData,
	PostApiLocalsendV2PrepareUploadResponse,
	PostApiLocalsendV2PrepareUploadError,
	PostApiLocalsendV2UploadData,
	PostApiLocalsendV2UploadResponse,
	PostApiLocalsendV2UploadError,
	PostApiLocalsendV2CancelData,
	PostApiLocalsendV2CancelResponse,
	PostApiLocalsendV2CancelError
} from "./types.gen"
import { client as _heyApiClient } from "./client.gen"

export type Options<
	TData extends TDataShape = TDataShape,
	ThrowOnError extends boolean = boolean
> = ClientOptions<TData, ThrowOnError> & {
	/**
	 * You can provide a client instance returned by `createClient()` instead of
	 * individual options. This might be also useful if you want to implement a
	 * custom client.
	 */
	client?: Client
	/**
	 * You can pass arbitrary values through the `meta` object. This can be
	 * used to access values that aren't defined as part of the SDK function.
	 */
	meta?: Record<string, unknown>
}

/**
 * Get device information
 */
export const getApiLocalsendV2Info = <ThrowOnError extends boolean = false>(
	options?: Options<GetApiLocalsendV2InfoData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		GetApiLocalsendV2InfoResponse,
		unknown,
		ThrowOnError
	>({
		url: "/api/localsend/v2/info",
		...options
	})
}

/**
 * Register device (for discovery)
 */
export const postApiLocalsendV2Register = <ThrowOnError extends boolean = false>(
	options?: Options<PostApiLocalsendV2RegisterData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).post<
		PostApiLocalsendV2RegisterResponse,
		PostApiLocalsendV2RegisterError,
		ThrowOnError
	>({
		url: "/api/localsend/v2/register",
		...options,
		headers: {
			"Content-Type": "application/json",
			...options?.headers
		}
	})
}

/**
 * Prepare file upload
 */
export const postApiLocalsendV2PrepareUpload = <ThrowOnError extends boolean = false>(
	options?: Options<PostApiLocalsendV2PrepareUploadData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).post<
		PostApiLocalsendV2PrepareUploadResponse,
		PostApiLocalsendV2PrepareUploadError,
		ThrowOnError
	>({
		url: "/api/localsend/v2/prepare-upload",
		...options,
		headers: {
			"Content-Type": "application/json",
			...options?.headers
		}
	})
}

/**
 * Upload a file
 */
export const postApiLocalsendV2Upload = <ThrowOnError extends boolean = false>(
	options: Options<PostApiLocalsendV2UploadData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).post<
		PostApiLocalsendV2UploadResponse,
		PostApiLocalsendV2UploadError,
		ThrowOnError
	>({
		url: "/api/localsend/v2/upload",
		...options
	})
}

/**
 * Cancel an upload session
 */
export const postApiLocalsendV2Cancel = <ThrowOnError extends boolean = false>(
	options: Options<PostApiLocalsendV2CancelData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).post<
		PostApiLocalsendV2CancelResponse,
		PostApiLocalsendV2CancelError,
		ThrowOnError
	>({
		url: "/api/localsend/v2/cancel",
		...options
	})
}
